call plug#begin('~/.vim/plugged')

" Color Schemes
Plug 'tomasr/molokai'

" Developer Tools Integration
"Plug 'tfnico/vim-gradle'

" Utilities
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'vim-scripts/paredit.vim'
Plug 'frazrepo/vim-rainbow'
Plug 'vim-airline/vim-airline'
Plug 'justinmk/vim-sneak'
Plug 'ervandew/supertab'

" File Management
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

" Clojure Related
Plug 'tpope/vim-classpath'
Plug 'guns/vim-clojure-static' | Plug 'tpope/vim-fireplace'

" Language Specific
"Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
call plug#end()

set autoindent
filetype plugin indent on
syntax enable

" Color Scheme
let g:solarized_termcolors=256
set termguicolors
set background=dark
colorscheme molokai

" No Bell
set belloff=all

" Tabbing Settings
set tabstop=4
set shiftwidth=4 " number of spaces used for autoindenting
set nowrap			" don't wrap lines

" Cursor and Column Line
set cursorline
set cursorcolumn

" Relative Line Numbers in normal mode, absolute in insert mode
set number
set relativenumber
autocmd InsertEnter * :set norelativenumber
autocmd InsertLeave * :set relativenumber

" Key Bindings
nnoremap <silent> <C-p> :GFiles<CR>
nnoremap <silent> <C-f> :Files<CR>


" Set internal encoding of vim, not needed on neovim, since coc.nvim using some
" unicode characters in the file autoload/float.vim
set encoding=utf-8

" TextEdit might fail if hidden is not set.
set hidden

" Some servers have issues with backup files, see #649.
set nobackup
set nowritebackup

" Give more space for displaying messages.
set cmdheight=2

" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=300

" Don't pass messages to |ins-completion-menu|.
set shortmess+=c

" Always show the signcolumn, otherwise it would shift the text each time
" diagnostics appear/become resolved.
if has("patch-8.1.1564")
  " Recently vim can merge signcolumn and number column into one
  set signcolumn=number
else
  set signcolumn=yes
endif


let g:go_def_mode='gopls'
let g:go_info_mode='gopls'

"au filetype go inoremap <buffer> . .<C-x><C-o>
let g:SuperTabDefaultCompletionType = "context"
